#include <iostream>
#include<fstream>
#include<ostream>
#include<stdlib.h>
#include<stdio.h>
#include <sys/time.h>
#include <unistd.h>
using namespace std;

int main()
{
    int n=1000;

    fstream file;
    file.open("D:/test_code/cache/x_1000.txt");

    int *a=new int[n];
    for(int i=0;i<n;i++)
        file>>a[i];
    file.close();

    int res=0;
    int res1=0;
    int res2=0;

    struct timeval t1,t2,t3,t4,t5,t6;
    double timeuse;

    //平凡算法
    gettimeofday(&t1,NULL);
    for(int i=0;i<n;i++)
        res+=a[i];
    gettimeofday(&t2,NULL);
    double t11= (t2.tv_sec - t1.tv_sec) + (double)(t2.tv_usec - t1.tv_usec)/1000000.0;





    //优化算法1--多链路式
    gettimeofday(&t3,NULL);
    int sum1= 0,sum2 = 0;
    for (int i = 0;i < n; i += 2)
    {
        sum1 += a[i];
        sum2 += a[i + 1];
    }
    res1 = sum1 + sum2;

    gettimeofday(&t4,NULL);
    double t22= (t4.tv_sec - t3.tv_sec) + (double)(t4.tv_usec - t3.tv_usec)/1000000.0;


    //优化算法2--二重循环实现递归算法
    gettimeofday(&t5,NULL);
    for (int m = n; m > 1; m /= 2)
        for (int i = 0; i < m / 2; i++)
            a[i] = a[i*2] + a[i*2 + 1];
    res2=a[0];
    gettimeofday(&t6,NULL);
    double t33= (t6.tv_sec - t5.tv_sec) + (double)(t6.tv_usec - t5.tv_usec)/1000000.0;



    cout<<"t1:"<<t11<<"ms"<<endl;
    cout<<"t2:"<<t22<<"ms"<<endl;
    cout<<"t3:"<<t33<<"ms"<<endl;


    return 0;
}
